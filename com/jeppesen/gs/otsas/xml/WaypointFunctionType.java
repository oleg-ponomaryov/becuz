//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.09.28 at 10:32:25 AM MDT 
//


package com.jeppesen.gs.otsas.xml;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for WaypointFunctionType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="WaypointFunctionType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="DepartureAirport"/>
 *     &lt;enumeration value="ArrivalAirport"/>
 *     &lt;enumeration value="PrimaryArrivalAlternateAirport"/>
 *     &lt;enumeration value="ArrivalAlternateAirport"/>
 *     &lt;enumeration value="Enroute"/>
 *     &lt;enumeration value="FreeFlightEnroute"/>
 *     &lt;enumeration value="GridPoint"/>
 *     &lt;enumeration value="Ndb"/>
 *     &lt;enumeration value="Vhf"/>
 *     &lt;enumeration value="Compulsory"/>
 *     &lt;enumeration value="AtsItem15"/>
 *     &lt;enumeration value="AirspaceBoundary"/>
 *     &lt;enumeration value="OceanicAirspaceBoundary"/>
 *     &lt;enumeration value="ETOPSEntry"/>
 *     &lt;enumeration value="ETOPSExit"/>
 *     &lt;enumeration value="EqualTimePoint"/>
 *     &lt;enumeration value="EqualTimePointDepDest"/>
 *     &lt;enumeration value="EqualFuelPoint"/>
 *     &lt;enumeration value="PointOfNoReturn"/>
 *     &lt;enumeration value="ContingencySavingsDecisionWaypoint"/>
 *     &lt;enumeration value="TopOfClimb"/>
 *     &lt;enumeration value="TopOfDescent"/>
 *     &lt;enumeration value="TopOfStepClimb"/>
 *     &lt;enumeration value="TopOfStepDescent"/>
 *     &lt;enumeration value="BottomOfClimb"/>
 *     &lt;enumeration value="BottomOfDescent"/>
 *     &lt;enumeration value="BottomOfStepClimb"/>
 *     &lt;enumeration value="BottomOfStepDescent"/>
 *     &lt;enumeration value="OTS"/>
 *     &lt;enumeration value="DriftDownDecisionPoint"/>
 *     &lt;enumeration value="DepressurisationDecisionPoint"/>
 *     &lt;enumeration value="ReportingPoint"/>
 *     &lt;enumeration value="ContingencySavingAirport"/>
 *     &lt;enumeration value="ContingencySavingEnRouteAlternateAirport"/>
 *     &lt;enumeration value="PrimaryContingencySavingAlternate"/>
 *     &lt;enumeration value="ContingencySavingAlternate"/>
 *     &lt;enumeration value="RVSMEntry"/>
 *     &lt;enumeration value="RVSMExit"/>
 *     &lt;enumeration value="MNPSEntry"/>
 *     &lt;enumeration value="MNPSExit"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "WaypointFunctionType")
@XmlEnum
public enum WaypointFunctionType {

    @XmlEnumValue("DepartureAirport")
    DEPARTURE_AIRPORT("DepartureAirport"),
    @XmlEnumValue("ArrivalAirport")
    ARRIVAL_AIRPORT("ArrivalAirport"),
    @XmlEnumValue("PrimaryArrivalAlternateAirport")
    PRIMARY_ARRIVAL_ALTERNATE_AIRPORT("PrimaryArrivalAlternateAirport"),
    @XmlEnumValue("ArrivalAlternateAirport")
    ARRIVAL_ALTERNATE_AIRPORT("ArrivalAlternateAirport"),
    @XmlEnumValue("Enroute")
    ENROUTE("Enroute"),
    @XmlEnumValue("FreeFlightEnroute")
    FREE_FLIGHT_ENROUTE("FreeFlightEnroute"),
    @XmlEnumValue("GridPoint")
    GRID_POINT("GridPoint"),
    @XmlEnumValue("Ndb")
    NDB("Ndb"),
    @XmlEnumValue("Vhf")
    VHF("Vhf"),
    @XmlEnumValue("Compulsory")
    COMPULSORY("Compulsory"),
    @XmlEnumValue("AtsItem15")
    ATS_ITEM_15("AtsItem15"),
    @XmlEnumValue("AirspaceBoundary")
    AIRSPACE_BOUNDARY("AirspaceBoundary"),
    @XmlEnumValue("OceanicAirspaceBoundary")
    OCEANIC_AIRSPACE_BOUNDARY("OceanicAirspaceBoundary"),
    @XmlEnumValue("ETOPSEntry")
    ETOPS_ENTRY("ETOPSEntry"),
    @XmlEnumValue("ETOPSExit")
    ETOPS_EXIT("ETOPSExit"),
    @XmlEnumValue("EqualTimePoint")
    EQUAL_TIME_POINT("EqualTimePoint"),
    @XmlEnumValue("EqualTimePointDepDest")
    EQUAL_TIME_POINT_DEP_DEST("EqualTimePointDepDest"),
    @XmlEnumValue("EqualFuelPoint")
    EQUAL_FUEL_POINT("EqualFuelPoint"),
    @XmlEnumValue("PointOfNoReturn")
    POINT_OF_NO_RETURN("PointOfNoReturn"),
    @XmlEnumValue("ContingencySavingsDecisionWaypoint")
    CONTINGENCY_SAVINGS_DECISION_WAYPOINT("ContingencySavingsDecisionWaypoint"),
    @XmlEnumValue("TopOfClimb")
    TOP_OF_CLIMB("TopOfClimb"),
    @XmlEnumValue("TopOfDescent")
    TOP_OF_DESCENT("TopOfDescent"),
    @XmlEnumValue("TopOfStepClimb")
    TOP_OF_STEP_CLIMB("TopOfStepClimb"),
    @XmlEnumValue("TopOfStepDescent")
    TOP_OF_STEP_DESCENT("TopOfStepDescent"),
    @XmlEnumValue("BottomOfClimb")
    BOTTOM_OF_CLIMB("BottomOfClimb"),
    @XmlEnumValue("BottomOfDescent")
    BOTTOM_OF_DESCENT("BottomOfDescent"),
    @XmlEnumValue("BottomOfStepClimb")
    BOTTOM_OF_STEP_CLIMB("BottomOfStepClimb"),
    @XmlEnumValue("BottomOfStepDescent")
    BOTTOM_OF_STEP_DESCENT("BottomOfStepDescent"),
    OTS("OTS"),
    @XmlEnumValue("DriftDownDecisionPoint")
    DRIFT_DOWN_DECISION_POINT("DriftDownDecisionPoint"),
    @XmlEnumValue("DepressurisationDecisionPoint")
    DEPRESSURISATION_DECISION_POINT("DepressurisationDecisionPoint"),
    @XmlEnumValue("ReportingPoint")
    REPORTING_POINT("ReportingPoint"),
    @XmlEnumValue("ContingencySavingAirport")
    CONTINGENCY_SAVING_AIRPORT("ContingencySavingAirport"),
    @XmlEnumValue("ContingencySavingEnRouteAlternateAirport")
    CONTINGENCY_SAVING_EN_ROUTE_ALTERNATE_AIRPORT("ContingencySavingEnRouteAlternateAirport"),
    @XmlEnumValue("PrimaryContingencySavingAlternate")
    PRIMARY_CONTINGENCY_SAVING_ALTERNATE("PrimaryContingencySavingAlternate"),
    @XmlEnumValue("ContingencySavingAlternate")
    CONTINGENCY_SAVING_ALTERNATE("ContingencySavingAlternate"),
    @XmlEnumValue("RVSMEntry")
    RVSM_ENTRY("RVSMEntry"),
    @XmlEnumValue("RVSMExit")
    RVSM_EXIT("RVSMExit"),
    @XmlEnumValue("MNPSEntry")
    MNPS_ENTRY("MNPSEntry"),
    @XmlEnumValue("MNPSExit")
    MNPS_EXIT("MNPSExit");
    private final String value;

    WaypointFunctionType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static WaypointFunctionType fromValue(String v) {
        for (WaypointFunctionType c: WaypointFunctionType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
