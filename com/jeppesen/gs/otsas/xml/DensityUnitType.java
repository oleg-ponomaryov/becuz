//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.09.28 at 10:32:25 AM MDT 
//


package com.jeppesen.gs.otsas.xml;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for densityUnitType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="densityUnitType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="g/cm3"/>
 *     &lt;enumeration value="lb/l"/>
 *     &lt;enumeration value="lb/ug"/>
 *     &lt;enumeration value="lb/m3"/>
 *     &lt;enumeration value="lb/ig"/>
 *     &lt;enumeration value="kg/l"/>
 *     &lt;enumeration value="kg/m3"/>
 *     &lt;enumeration value="kg/ig"/>
 *     &lt;enumeration value="kg/ug"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "densityUnitType")
@XmlEnum
public enum DensityUnitType {

    @XmlEnumValue("g/cm3")
    G_CM_3("g/cm3"),
    @XmlEnumValue("lb/l")
    LB_L("lb/l"),
    @XmlEnumValue("lb/ug")
    LB_UG("lb/ug"),
    @XmlEnumValue("lb/m3")
    LB_M_3("lb/m3"),
    @XmlEnumValue("lb/ig")
    LB_IG("lb/ig"),
    @XmlEnumValue("kg/l")
    KG_L("kg/l"),
    @XmlEnumValue("kg/m3")
    KG_M_3("kg/m3"),
    @XmlEnumValue("kg/ig")
    KG_IG("kg/ig"),
    @XmlEnumValue("kg/ug")
    KG_UG("kg/ug");
    private final String value;

    DensityUnitType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static DensityUnitType fromValue(String v) {
        for (DensityUnitType c: DensityUnitType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
